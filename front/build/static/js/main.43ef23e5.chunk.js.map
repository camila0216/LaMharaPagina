{"version":3,"sources":["Producto.js","App.js","serviceWorker.js","Feedback.js","index.js","TopMenu.js"],"names":["Producto","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","cantidad","comprar","bind","assertThisInitialized","console","log","setState","react_default","a","createElement","className","producto","nombre","src","imagen","alt","onClick","id","Component","App","productos","_this2","fetch","then","res","json","map","t","src_Producto_0","renderProductos","Boolean","window","location","hostname","match","Feedback","clasName","placeholder","title","data-toggle","data-placement","data-original-title","class","type","ReactDOM","render","href","src_App","src_Feedback_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.43ef23e5.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport \"./Producto.css\"\r\n\r\nclass Producto extends Component{\r\n  constructor (props){\r\n    super(props);\r\n    this.state ={\r\n      cantidad: 0\r\n    }\r\n\r\n    this.comprar = this.comprar.bind(this);\r\n  }\r\n\r\n  comprar() {\r\n    console.log(\"Comprar\", this);\r\n    this.setState({\r\n      cantidad: this.state.cantidad + 1\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"col-md-4\">\r\n        <div className=\"row infoProducto\">\r\n            {this.props.producto.nombre}\r\n        </div>\r\n        <div className=\"row imgProducto\">\r\n          <img className=\"imgProd\" src={this.props.producto.imagen} alt={this.props.producto.nombre}/>\r\n        </div>\r\n        <div className=\"row btnProd\">\r\n          <button className=\"btn btn-primary\"\r\n            onClick={ this.comprar}>\r\n            Comprar\r\n          </button>\r\n        </div>\r\n        <div className=\"row\">\r\n          <span>\r\n            Cantidad:\r\n            <span id=\"compraValue\">\r\n              {this.state.cantidad}\r\n            </span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Producto;","import React, {Component} from \"react\";\r\nimport Producto from \"./Producto.js\";\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      productos:[]\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch(\"/productos\")\r\n      .then(res => res.json())\r\n      .then(productos => this.setState({\r\n        productos: productos\r\n      }));\r\n  }\r\n\r\n  renderProductos()\r\n  {\r\n    return this.state.productos.map(t => <Producto producto={t}></Producto>);\r\n  };\r\n\r\n  render() {\r\n  return(\r\n    <div className=\"container\">\r\n      <h1>Productos</h1>\r\n      <div className =\"row\">\r\n        {this.renderProductos()}\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport \"./Feedback.css\"\r\nclass Feedback extends Component {\r\n\r\n  render() {\r\n  return(\r\n    <div clasName=\"row\">\r\n      <div className=\"col-md-6\">\r\n        <div className=\"widget-area no-padding blank\">\r\n          <div className=\"status-upload\">\r\n            <form>\r\n                <textarea placeholder=\"¿Tienes algun comentario sobre nuestra pagina? Escribenos para mejorar\" ></textarea>\r\n                <ul>\r\n                  <li><a title=\"\" data-toggle=\"tooltip\" data-placement=\"bottom\" data-original-title=\"Audio\"><i class=\"fa fa-music\"></i></a></li>\r\n                  <li><a title=\"\" data-toggle=\"tooltip\" data-placement=\"bottom\" data-original-title=\"Video\"><i class=\"fa fa-video-camera\"></i></a></li>\r\n                  <li><a title=\"\" data-toggle=\"tooltip\" data-placement=\"bottom\" data-original-title=\"Sound Record\"><i class=\"fa fa-microphone\"></i></a></li>\r\n                  <li><a title=\"\" data-toggle=\"tooltip\" data-placement=\"bottom\" data-original-title=\"Picture\"><i class=\"fa fa-picture-o\"></i></a></li>\r\n                </ul>\r\n                <button type=\"submit\" class=\"btn btn-success green\"><i class=\"fa fa-share\"></i> Enviar</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Feedback;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport TopMenu from './TopMenu';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Feedback from \"./Feedback.js\";\r\nReactDOM.render(\r\n  <div>\r\n    <TopMenu/>\r\n    <div className=\"container\">\r\n      <App/>\r\n      <Feedback/>\r\n    </div>\r\n  </div>\r\n  , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\n\r\nexport default () =>\r\n  <nav className=\"navbar navbar-inverse\">\r\n  <div className=\"container-fluid\">\r\n    <div className=\"navbar-header\">\r\n      <a className=\"navbar-brand\" href=\"#\">La Mhara</a>\r\n    </div>\r\n    <ul className=\"nav navbar-nav\">\r\n      <li className=\"active\"><a href=\"#\">Home</a></li>\r\n      <li className=\"dropdown\"><a className=\"dropdown-toggle\"\r\n      data-toggle=\"dropdown\" href=\"#\">Page 1 <span className=\"caret\"></span></a>\r\n        <ul className=\"dropdown-menu\">\r\n          <li><a href=\"#\">Page 1-1</a></li>\r\n          <li><a href=\"#\">Page 1-2</a></li>\r\n          <li><a href=\"#\">Page 1-3</a></li>\r\n        </ul>\r\n      </li>\r\n      <li><a href=\"#\">Page 2</a></li>\r\n    </ul>\r\n    <ul className=\"nav navbar-nav navbar-right\">\r\n      <li><a href=\"#\"><span className=\"glyphicon glyphicon-user\"></span> Sign Up</a></li>\r\n      <li><a href=\"#\"><span className=\"glyphicon glyphicon-log-in\"></span> Login</a></li>\r\n    </ul>\r\n  </div>\r\n</nav>"],"sourceRoot":""}